# Generated by Django 4.2.6 on 2023-12-04 21:33

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='recipient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='sensor',
            fields=[
                ('id', models.CharField(max_length=8, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=64)),
                ('lattitude', models.FloatField(null=True)),
                ('longitude', models.FloatField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='survey',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('idSurvey', models.IntegerField()),
                ('temperature', models.FloatField(null=True)),
                ('humidity', models.IntegerField(null=True)),
                ('battery_level', models.IntegerField()),
                ('rssi', models.IntegerField()),
                ('date', models.DateTimeField()),
                ('sensor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='API.sensor')),
            ],
        ),
        migrations.CreateModel(
            name='alert',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('frequency', models.IntegerField()),
                ('humidity_inferior', models.IntegerField()),
                ('humidity_superior', models.IntegerField()),
                ('temperature_inferior', models.FloatField()),
                ('temperature_superior', models.FloatField()),
                ('recipients', models.ManyToManyField(to='API.recipient')),
            ],
        ),
    ]
